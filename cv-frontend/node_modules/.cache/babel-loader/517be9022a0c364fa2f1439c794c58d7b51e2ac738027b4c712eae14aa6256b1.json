{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\CVAgent\\\\cv-frontend\\\\src\\\\components\\\\JobRanking.js\";\nimport React from 'react';\nimport { Box, Typography, Card, CardContent, Chip, List, ListItem, ListItemText, Divider, Stack, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobRanking({\n  jobs\n}) {\n  const sortedJobs = [...jobs].sort((a, b) => b.match_rate - a.match_rate);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 700,\n        fontSize: '2rem'\n      },\n      children: \"Ranked Job Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: sortedJobs.map((job, idx) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderLeft: `6px solid ${job.match_rate > 80 ? '#4caf50' : job.match_rate > 60 ? '#ff9800' : '#f44336'}`\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                flexGrow: 1\n              },\n              children: [job.company_name, \" - \", job.job_title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: `Match: ${job.match_rate}%`,\n              color: job.match_rate > 80 ? 'success' : job.match_rate > 60 ? 'warning' : 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: job.match_rate,\n              sx: {\n                height: 8,\n                borderRadius: 5\n              },\n              color: job.match_rate > 80 ? 'success' : job.match_rate > 60 ? 'warning' : 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mt: 1\n            },\n            children: \"Match Breakdown:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: job.match_breakdown.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 37\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Missing Requirements:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: job.missing_requirements.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Recommendations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: job.recommendations.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontStyle: 'italic'\n            },\n            children: job.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = JobRanking;\nexport default JobRanking;\nvar _c;\n$RefreshReg$(_c, \"JobRanking\");","map":{"version":3,"names":["React","Box","Typography","Card","CardContent","Chip","List","ListItem","ListItemText","Divider","Stack","LinearProgress","jsxDEV","_jsxDEV","JobRanking","jobs","sortedJobs","sort","a","b","match_rate","children","variant","gutterBottom","sx","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","spacing","map","job","idx","borderLeft","display","alignItems","mb","flexGrow","company_name","job_title","label","color","value","height","borderRadius","mt","dense","match_breakdown","item","i","primary","my","missing_requirements","recommendations","fontStyle","summary","_c","$RefreshReg$"],"sources":["C:/Windows/System32/CVAgent/cv-frontend/src/components/JobRanking.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, Card, CardContent, Chip, List, ListItem, ListItemText, Divider, Stack, LinearProgress } from '@mui/material';\r\n\r\nfunction JobRanking({ jobs }) {\r\n  const sortedJobs = [...jobs].sort((a, b) => b.match_rate - a.match_rate);\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 700, fontSize: '2rem' }}>Ranked Job Matches</Typography>\r\n      <Stack spacing={3}>\r\n        {sortedJobs.map((job, idx) => (\r\n          <Card key={idx} sx={{ borderLeft: `6px solid ${job.match_rate > 80 ? '#4caf50' : job.match_rate > 60 ? '#ff9800' : '#f44336'}` }}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>{job.company_name} - {job.job_title}</Typography>\r\n                <Chip label={`Match: ${job.match_rate}%`} color={job.match_rate > 80 ? 'success' : job.match_rate > 60 ? 'warning' : 'error'} />\r\n              </Box>\r\n              <Box sx={{ mb: 1 }}>\r\n                <LinearProgress variant=\"determinate\" value={job.match_rate} sx={{ height: 8, borderRadius: 5 }} color={job.match_rate > 80 ? 'success' : job.match_rate > 60 ? 'warning' : 'error'} />\r\n              </Box>\r\n              <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>Match Breakdown:</Typography>\r\n              <List dense>\r\n                {job.match_breakdown.map((item, i) => (\r\n                  <ListItem key={i}><ListItemText primary={item} /></ListItem>\r\n                ))}\r\n              </List>\r\n              <Divider sx={{ my: 1 }} />\r\n              <Typography variant=\"subtitle2\">Missing Requirements:</Typography>\r\n              <List dense>\r\n                {job.missing_requirements.map((item, i) => (\r\n                  <ListItem key={i}><ListItemText primary={item} /></ListItem>\r\n                ))}\r\n              </List>\r\n              <Divider sx={{ my: 1 }} />\r\n              <Typography variant=\"subtitle2\">Recommendations:</Typography>\r\n              <List dense>\r\n                {job.recommendations.map((item, i) => (\r\n                  <ListItem key={i}><ListItemText primary={item} /></ListItem>\r\n                ))}\r\n              </List>\r\n              <Divider sx={{ my: 1 }} />\r\n              <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>{job.summary}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default JobRanking; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}